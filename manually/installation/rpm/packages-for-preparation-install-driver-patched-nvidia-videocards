#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: packages-for-preparation-install-driver-patched-nvidia-videocards
## @Creation date file: 12.04.2021, 23:47:03

[[ -z "${packages_for_preparation_install_driver_patched_nvidia_videocards_script_source}" ]] && declare -rx packages_for_preparation_install_driver_patched_nvidia_videocards_script_source="$BASH_SOURCE"

if [[ -z "${packages_for_preparation_install_driver_patched_nvidia_videocards_script_source_path}" ]]; then
  temp_one="$(dirname ${packages_for_preparation_install_driver_patched_nvidia_videocards_script_source})"
  if [[ "${temp_one}" == '.' ]]; then
    declare -rx packages_for_preparation_install_driver_patched_nvidia_videocards_script_source_path="$(pwd)"
  else
    declare -rx packages_for_preparation_install_driver_patched_nvidia_videocards_script_source_path="${temp_one}"
  fi
fi

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)"
  printf "Script runs from path: %s\n" "${main_run_script_path}"
fi

if [[ -z "${main_cfg_script_source}" ]]; then
  check=1
  while [[ "${check}" -eq 1 ]]; do
    if [[ ! -f 'main.cfg' ]]; then
      if [[ "$(pwd)" != "/" ]]; then
        cd ../
      else
        cd ${main_run_script_path}
        check=0
        echo -e '\e[31m'"!!! Not found configuration shared file !!!\033[0m"
        tput sgr0
        exit 1
      fi
    else
      check=0
      declare -rx main_project_path="$(pwd)"
      . "${main_project_path}/main.cfg" "$@"
      cd "${main_run_script_path}"
    fi
  done
fi

printf "Loading: %s\n" "$(readlink -m ${BASH_SOURCE})"

function install_packages_for_preparation_install_driver_patched_nvidia_videocards() {

  local install_pkg=(
    'kernel-devel'
    'kernel-headers'
    'gcc'
    'make'
    'dkms'
    'acpid'
    'libglvnd-glx'
    'libglvnd-opengl'
    'libglvnd-devel'
    'pkgconf-pkg-config'
    'grubby'
    'akmods'
    'wget'
    'patch'
    'vdpauinfo'
    'libva-vdpau-driver'
    'libva-utils'
    'gcc-c++'
    'mesa-libGLU-devel'
    'libX11-devel'
    'libXi-devel'
    'libXmu-devel'
    'freeglut'
    'freeglut-devel'
    'plymouth-theme-script'
    'plymouth-theme-spinfinity'
  )

  pm "$@" -- "${install_pkg[@]}"

}

function main_packages_for_preparation_install_driver_patched_nvidia_videocards_script_source() {

  # printf "Initialise main function of packages-for-preparation-install-driver-patched-nvidia-videocards script source\n";

  if [[ -z "$(lspci | grep -E 'VGA|3D')" ]]; then
    echo "Not installed NVIDIA videocard"
    exit 1
  fi

  install_packages_for_preparation_install_driver_patched_nvidia_videocards "$@"

}

main_packages_for_preparation_install_driver_patched_nvidia_videocards_script_source "$@"
