#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: nvidia-340xx
## @Creation date file: 22.02.2021, 22:01:31

[[ -z "${nvidia_340xx_script_source}" ]] && declare -rx nvidia_340xx_script_source="$BASH_SOURCE"

if [[ -z "${nvidia_340xx_script_source_path}" ]]; then
    temp_one="$(dirname ${nvidia_340xx_script_source})"
    if [[ "${temp_one}" == '.' ]]; then
        declare -rx nvidia_340xx_script_source_path="$(pwd)"
    else
        declare -rx nvidia_340xx_script_source_path="${temp_one}"
    fi
fi

if [[ -z "${main_run_script_path}" ]]; then
    declare -rx main_run_script_path="$(pwd)"
    printf "Script runs from path: %s\n" "${main_run_script_path}"
fi

if [[ -z "${main_cfg_script_source}" ]]; then
    check=1
    while [[ "${check}" -eq 1 ]]; do
        if [[ ! -f 'main.cfg' ]]; then
            if [[ "$(pwd)" != "/" ]]; then
                cd ../
            else
                cd ${main_run_script_path}
                check=0
                echo -e '\e[31m'"!!! Not found configuration shared file !!!\033[0m"
                tput sgr0
                exit 1
            fi
        else
            check=0
            declare -rx main_project_path="$(pwd)"
            . "${main_project_path}/main.cfg" "$@"
            cd "${main_run_script_path}"
        fi
    done
fi

printf "Loading: %s\n" "$(readlink -m ${BASH_SOURCE})"

function preinstall_nvidia_340xx() {

    local install_pkg=(
        kernel-devel
        kernel-headers
        akmods
        grubby
        fakeroot
        fakeroot-libs
        fakeroot*i686
        gcc
        make
        dkms
        acpi
        acpid
        libglvnd-glx
        libglvnd-opengl
        libglvnd-devel
        pkgconf-pkg-config
        libdrm
        libdrm-devel
        drm-utils
        glibc
        libX11
        libXau
        libXext
        libgcc
        libxcb
        patch
        libvdpau
        vdpauinfo
        libva-vdpau-driver
        libva-utils
        vulkan-loader
        vulkan-loader-devel
        vulkan-tools
        vulkan-validation-layers
        vulkan-validation-layers*i686
        vulkan-validation-layers-devel
        vulkan-loader*i686
        spirv-tools-libs
        spirv-tools-libs*i686
    )

    sudo dnf install ${install_pkg[@]}

}

function install_nvidia_340xx_rpm() {

    local install_pkg=(
        akmod-nvidia-340xx
        kmod-nvidia-340xx
        xorg-x11-drv-nvidia-340xx
        xorg-x11-drv-nvidia-340xx-cuda
        # xorg-x11-drv-nvidia-cuda-libs
        nvidia-query-resource-opengl-lib
        nvidia-query-resource-opengl
        xorg-x11-drv-nvidia-340xx-libs
        xorg-x11-drv-nvidia-340xx
        xorg-x11-drv-nvidia-340xx-devel
        xorg-x11-drv-nvidia-340xx-kmodsrc
        xorg-x11-drv-nvidia-340xx-libs*i686
    )

    sudo dnf install ${install_pkg[@]}

    sudo grubby --update-kernel=ALL --args='nvidia-drm.modeset=1 rd.driver.blacklist=nouveau'

}

function install_nvidia_340xx_source() {

    echo -e 'TODO'

}

function reinstall_system_packages() {
    sudo rm -f /usr/lib{,64}/libGL.so.* /usr/lib{,64}/libEGL.so.*
    sudo rm -f /usr/lib{,64}/xorg/modules/extensions/libglx.so
    sudo dnf reinstall xorg-x11-server-Xorg mesa-libGL mesa-libEGL libglvnd\*
}

function uninstall_nvidia_340xx() {
    sudo mv /etc/X11/xorg.conf /etc/X11/xorg.conf.saved
    sudo dnf remove xorg-x11-drv-nvidia\* nvidia\* -x fakeroot -x akmods
}

function main_nvidia_340xx_script_source() {

    # printf "Initialise main function of nvidia-340xx script source\n";

    local flag=0

    OPTIND=1

    while getopts "sru" OPT; do
        case $OPT in
        s) flag=1 ;;
        r) flag=2 ;;
        u) flag=3 ;;
        *) ;;
        esac
    done

    shift $(($OPTIND - 1))
    [ "${1:-}" = "--" ] && shif

    if [[ ${flag} -eq 0 ]]; then
        echo -e "\nFlags:\n\t-s (source patched installation)\n\t-r (from rpmfudion repository installation)\n\t-u (uninstall driver and reinstall system packages)\n\nAnd also read documentations of link:\n\n\thttps://rpmfusion.org/Howto/NVIDIA?highlight=(CategoryHowto)\n"
    elif [[ ${flag} -eq 3 ]]; then
        uninstall_nvidia_340xx
        reinstall_system_packages
    else
        preinstall_nvidia_340xx
        if [[ ${flag} -eq 1 ]]; then
            install_nvidia_340xx_source
        elif [[ ${flag} -eq 2 ]]; then
            install_nvidia_340xx_rpm
        fi
    fi

}

main_nvidia_340xx_script_source "$@"
