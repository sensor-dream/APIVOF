#!/bin/env bash
# -*- coding: utf-8 -*-
#
## @Author: sensor-dream
## @Email: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © sensor-dream. All rights reserved. Contacts: sensor-dream@sensor-dream.ru
## @Copyright © Sensor-Dream Boxed System (SDBS). Contacts: sensor-dream@sensor-dream.ru
## @License: http://www.apache.org/licenses/LICENSE-2.0
## @Site: https://sensor-dream.ru
## @File: main.cfg
## @Creation date file: 07.02.2021, 19:09:13

clear

declare temp_one=
declare temp_two=
declare temp_three=
declare temp_four=
declare current_path=
declare decision=

declare -rx main_cfg_script_source="$BASH_SOURCE"

if [[ -z "${main_run_script_path}" ]]; then
  declare -rx main_run_script_path="$(pwd)"
  declare -rx main_project_path="$(pwd)"
  printf "Script runs from path: %s\n" "${main_run_script_path}"
fi

declare -rx kerner_release="$(uname -r)"
declare -rx kerner_release_short="$(echo ${kerner_release} | awk -F. '{ printf "%s.%s\n", $1, $2  }')"
declare -rx os_id="$(grep '^ID' /etc/os-release | awk -F= '{ print $2 }')"
# # declare -rx os_version_id="$(grep VERSION_ID /etc/os-release | awk -F= '{ print $2 }')"
## declare -rx os_version_id="$(lsb_release -rs)";
declare -rx os_version_id="$(rpm -E %${os_id})"
declare -rx os_version_bit="$(uname -p)"
declare -rx host_type="$HOSTTYPE"
declare -rx use_display="${DISPLAY%%.*}"
declare -rx session_user="$(id -nu)"
declare -rx session_user_id="$(id -u)"
declare -rx session_group="$(id -ng)"
declare -rx session_group_id="$(id -g)"
declare -rx number_cores="$(nproc)"
declare -rx timestamp="$(date +%s)"
declare -rx format_date="$(date +%Y-%m-%d)"
declare -rx format_datetime="$(date +%Y%m%d-%H%M%S)"

declare -rx pach_list_collections="${main_project_path}/list-collections"

printf "Initialise: %s\n" "$(readlink -m ${main_cfg_script_source})"

case ${session_user_id} in
0)
  echo "Run the script from a non-superuser"
  exit 1
  ;;
*) echo "Run script from user - ${session_user}" ;; ## sudo $0 "$@" ;;
esac

if [[ ! -L "${main_project_path}/tools" ]]; then
  if [[ ! -d ../UBS ]]; then
    echo "Clone it https://github.com/sensor-dream/UBS.git repository to $(dirname ${main_project_path})/UBS"
    git clone https://github.com/sensor-dream/UBS.git ../UBS
  fi
  ln -s ../UBS tools
fi

. "${main_project_path}/tools/functions"

[[ -z "${cfg_full_name}" ]] && . "${main_project_path}/tools/cfg-personal-information"

# if [[ ! -d "${main_project_path}/hidden" ]]; then
#   mkdir -m 0700 -p "${main_project_path}/hidden"
#   cat <<EOF >"${main_project_path}/hidden/.gitignore"
# *
# !\.gitignore
# EOF
# fi

if [[ ! -L "${main_project_path}/hidden" || ! -d "${main_project_path}/hidden" ]]; then
  if [[ -d ../../../System/hidden ]]; then
    ln -s ../../../System/hidden hidden
  else
    mkdir -m 0700 -p "${main_project_path}/hidden"
    cat <<EOF >"${main_project_path}/hidden/.gitignore"
 *
!\.gitignore
EOF
  fi
fi

if [[ ! -d "${main_project_path}/temp" ]]; then
  mkdir -m 0770 -p "${main_project_path}/temp"
  cp "${main_project_path}/hidden/.gitignore" "${main_project_path}/temp/.gitignore"
fi

if [[ ! -d "${pach_list_collections}" ]]; then
  mkdir -m 0770 -p "${pach_list_collections}"
  cp "${main_project_path}/hidden/.gitignore" "${pach_list_collections}/.gitignore"
  sed -i 's/^[\*]/#*/' "${pach_list_collections}/.gitignore"
fi

function main_list() {

  cat <<EOF | tee "${main_project_path}/main.list" >/dev/null
# The file for placing the installation packages.
# It is recreated automatically.
# Installed package names are written to the list of collections: list-collections/pack-in-system.list.install .
EOF

}

if [[ -f "${main_project_path}/main.list" ]]; then
  cp -f "${main_project_path}/main.list" "${main_project_path}/main.list.old"
else
  main_list
fi
